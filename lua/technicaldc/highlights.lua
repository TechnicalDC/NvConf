local hl = vim.api.nvim_set_hl
local palette = require("mini.hues").make_palette()

-- print(vim.inspect(palette))

hl(0, "StatusLineModeNormal",   { bg = palette.blue,    fg = palette.bg_mid })
hl(0, "StatusLineModeVisual",   { bg = palette.yellow,  fg = palette.bg_mid })
hl(0, "StatusLineModeInsert",   { bg = palette.green,   fg = palette.bg_mid })
hl(0, "StatusLineModeReplace",  { bg = palette.orange,  fg = palette.bg_mid })
hl(0, "StatusLineModeCommand",  { bg = palette.red,     fg = palette.bg_mid })
hl(0, "StatusLineModeTerminal", { bg = palette.azure,   fg = palette.bg_mid })
hl(0, "StatusLineModeConfirm",  { bg = palette.cyan,    fg = palette.bg_mid })
hl(0, "StatusLineMode",         { bg = palette.bg_mid2, fg = palette.fg_mid })

-- BUILT-IN
hl(0, "StatusLine", { fg = palette.fg_mid, bg = palette.bg_mid })
hl(0, "StatusLineNC", { fg = palette.fg_mid, bg = palette.bg_mid })
hl(0, "StatusLineTerm", { fg = palette.fg_mid, bg = palette.bg_mid })
hl(0, "StatusLineTermNC", { fg = palette.fg_mid, bg = palette.bg_mid })
hl(0, "WinBar", { fg = palette.fg_mid, bg = palette.bg})
hl(0, "WinBarNC", { fg = palette.fg_mid, bg = palette.bg})
hl(0, "Pmenu", { bg = palette.bg_edge })
-- hl(0, "LineNr", { bg = palette.bg_edge })
-- hl(0, "CursorLineNr", { bg = palette.bg_edge })
-- hl(0, "CursorLineSign", { bg = palette.bg_edge })
-- hl(0, "CursorLineFold", { bg = palette.bg_edge })
-- hl(0, "SignColumn", { bg = palette.bg_edge })
hl(0, "WinSeparator", { fg = palette.bg_mid })
hl(0, "PmenuSel", { fg = palette.bg_edge,  bg = palette.fg_edge })
hl(0, "FloatBorder", { fg = palette.bg_edge, bg = palette.bg_edge })
hl(0, "FloatTitle", { fg = palette.fg, bg = palette.bg_mid2 })
hl(0, "DiagnosticUnderlineError", { undercurl = true })
hl(0, "DiagnosticUnderlineHint", { undercurl = true })
hl(0, "DiagnosticUnderlineInfo", { undercurl = true })
hl(0, "DiagnosticUnderlineOk", { undercurl = true })
hl(0, "DiagnosticUnderlineWarn", { undercurl = true })

hl(0, "BlinkCmpSource", { fg = palette.fg_mid2 })

-- MINI-STARTER
hl(0, "MiniStarterHeader", { fg = palette.fg_edge})
hl(0, "MiniStarterItem", { fg = palette.fg_mid2})
hl(0, "MiniStarterSection", { fg = palette.fg_edge})
hl(0, "MiniStarterItemPrefix", { fg = palette.fg_mid})

-- MINI-FILES
hl(0, "MiniFilesTitle", { fg = palette.fg_mid, bg = palette.bg_mid })
hl(0, "MiniFilesTitleFocused", { link = "FloatTitle" })
hl(0, "MiniFilesBorderModified", { link = "FloatBorder" })

-- TELESCOPE
hl(0, "TelescopeBorder"       , { fg = palette.bg_edge2 , bg = palette.bg_edge2 })
hl(0, "TelescopePromptBorder" , { link = "FloatBorder" })
hl(0, "TelescopePromptNormal" , { link = "NormalFloat" })
hl(0, "TelescopePromptPrefix" , { fg = palette.fg })
hl(0, "TelescopeNormal"       , { bg = palette.bg_edge2 })
hl(0, "TelescopePreviewTitle" , { link = "FloatTitle" })
hl(0, "TelescopePromptTitle"  , { link = "FloatTitle" })
hl(0, "TelescopeResultsTitle" , { link = "FloatTitle" })
hl(0, "TelescopeSelection"    , { link = "PmenuSel" })
-- hl(0, "TelescopeMultiSelection", { link = "TelescopeNormal" })

-- NOICE
hl(0, "NoiceCmdline",                       { link = "NormalFloat" })
hl(0, "NoiceCmdlineIcon",                   { fg = palette.fg })
hl(0, "NoiceCmdlineIconCalculator",         { link = "NoiceCmdlineIcon" })
hl(0, "NoiceCmdlineIconCmdline",            { link = "NoiceCmdlineIcon" })
hl(0, "NoiceCmdlineIconFilter",             { link = "NoiceCmdlineIcon" })
hl(0, "NoiceCmdlineIconHelp",               { link = "NoiceCmdlineIcon" })
hl(0, "NoiceCmdlineIconIncRename",          { link = "NoiceCmdlineIcon" })
hl(0, "NoiceCmdlineIconInput",              { link = "NoiceCmdlineIcon" })
hl(0, "NoiceCmdlineIconLua",                { link = "NoiceCmdlineIcon" })
hl(0, "NoiceCmdlineIconSearch",             { link = "NoiceCmdlineIcon" })
hl(0, "NoiceCmdlinePopup",                  { link = "NormalFloat" })
hl(0, "NoiceCmdlinePopupBorder",            { link = "FloatBorder" })
hl(0, "NoiceCmdlinePopupBorderCalculator",  { link = "NoiceCmdlinePopupBorder" })
hl(0, "NoiceCmdlinePopupBorderCmdline",     { link = "NoiceCmdlinePopupBorder" })
hl(0, "NoiceCmdlinePopupBorderFilter",      { link = "NoiceCmdlinePopupBorder" })
hl(0, "NoiceCmdlinePopupBorderHelp",        { link = "NoiceCmdlinePopupBorder" })
hl(0, "NoiceCmdlinePopupBorderIncRename",   { link = "NoiceCmdlinePopupBorder" })
hl(0, "NoiceCmdlinePopupBorderInput",       { link = "NoiceCmdlinePopupBorder" })
hl(0, "NoiceCmdlinePopupBorderLua",         { link = "NoiceCmdlinePopupBorder" })
hl(0, "NoiceCmdlinePopupBorderSearch",      { link = "NoiceCmdlinePopupBorder" })
hl(0, "NoiceCmdlinePopupTitle",             { link = "FloatTitle" })
hl(0, "NoiceCmdlinePopupTitleLua",          { link = "NoiceCmdlinePopupTitle" })
hl(0, "NoiceCmdlinePopupTitleHelp",         { link = "NoiceCmdlinePopupTitle" })
hl(0, "NoiceCmdlinePopupTitleInput",        { link = "NoiceCmdlinePopupTitle" })
hl(0, "NoiceCmdlinePopupTitleFilter",       { link = "NoiceCmdlinePopupTitle" })
hl(0, "NoiceCmdlinePopupTitleSearch",       { link = "NoiceCmdlinePopupTitle" })
hl(0, "NoiceCmdlinePopupTitleCmdline",      { link = "NoiceCmdlinePopupTitle" })
hl(0, "NoiceCmdlinePopupTitleIncRename",    { link = "NoiceCmdlinePopupTitle" })
hl(0, "NoiceCmdlinePopupTitleCalculator",   { link = "NoiceCmdlinePopupTitle" })
hl(0, "NoiceCmdlinePrompt",                 { link = "FloatTitle" })
hl(0, "NoiceCompletionItemKindDefault",     { link = "Special" })
hl(0, "NoiceCompletionItemKindClass",       { link = "NoiceCompletionItemKindDefault" })
hl(0, "NoiceCompletionItemKindColor",       { link = "NoiceCompletionItemKindDefault" })
hl(0, "NoiceCompletionItemKindConstant",    { link = "NoiceCompletionItemKindDefault" })
hl(0, "NoiceCompletionItemKindConstructor", { link = "NoiceCompletionItemKindDefault" })
hl(0, "NoiceCompletionItemKindEnum",        { link = "NoiceCompletionItemKindDefault" })
hl(0, "NoiceCompletionItemKindEnumMember",  { link = "NoiceCompletionItemKindDefault" })
hl(0, "NoiceCompletionItemKindField",       { link = "NoiceCompletionItemKindDefault" })
hl(0, "NoiceCompletionItemKindFile",        { link = "NoiceCompletionItemKindDefault" })
hl(0, "NoiceCompletionItemKindFolder",      { link = "NoiceCompletionItemKindDefault" })
hl(0, "NoiceCompletionItemKindFunction",    { link = "NoiceCompletionItemKindDefault" })
hl(0, "NoiceCompletionItemKindInterface",   { link = "NoiceCompletionItemKindDefault" })
hl(0, "NoiceCompletionItemKindKeyword",     { link = "NoiceCompletionItemKindDefault" })
hl(0, "NoiceCompletionItemKindMethod",      { link = "NoiceCompletionItemKindDefault" })
hl(0, "NoiceCompletionItemKindModule",      { link = "NoiceCompletionItemKindDefault" })
hl(0, "NoiceCompletionItemKindProperty",    { link = "NoiceCompletionItemKindDefault" })
hl(0, "NoiceCompletionItemKindSnippet",     { link = "NoiceCompletionItemKindDefault" })
hl(0, "NoiceCompletionItemKindStruct",      { link = "NoiceCompletionItemKindDefault" })
hl(0, "NoiceCompletionItemKindText",        { link = "NoiceCompletionItemKindDefault" })
hl(0, "NoiceCompletionItemKindUnit",        { link = "NoiceCompletionItemKindDefault" })
hl(0, "NoiceCompletionItemKindValue",       { link = "NoiceCompletionItemKindDefault" })
hl(0, "NoiceCompletionItemKindVariable",    { link = "NoiceCompletionItemKindDefault" })
hl(0, "NoiceConfirmBorder"       , { fg = palette.bg_edge2 , bg = palette.bg_edge2 })
hl(0, "NoiceConfirm"       , { bg = palette.bg_edge2 })
